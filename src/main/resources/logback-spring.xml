<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!--로그 파일 저장 위치-->
    <property name="LOGS_PATH" value="logs"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${HOSTNAME}|%d{HH:mm:ss}|%-5level %logger{36} - %msg%n</Pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <appender name="FILE-INFO-PRUDENT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <prudent>true</prudent>
        <file>${LOGS_PATH}/logback.log</file>
        <encoder>
            <pattern>[${HOSTNAME}|%d{yyyy-MM-dd HH:mm:ss}|%level] %logger{8} %msg\n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOGS_PATH}/logback.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>10MB</maxFileSize>
            <totalSizeCap>1GB</totalSizeCap>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
    </appender>

    <appender name="FILE-INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--        <prudent>true</prudent>-->
        <file>${LOGS_PATH}/logback.${HOSTNAME}.log</file>
        <encoder>
            <!--            <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>-->
            <!--            <pattern>%d %p %c{1.} [%t] %m%n</pattern>-->
            <pattern>[${HOSTNAME}|%d{yyyy-MM-dd HH:mm:ss}|%level] %logger{8} %msg\n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOGS_PATH}/logback.%d{yyyy-MM-dd}_${HOSTNAME}.%i.log</fileNamePattern>
            <!-- each archived file, size max 10MB -->
            <maxFileSize>10MB</maxFileSize>
            <!-- total size of all archives files, if total size > 20GB, it will delete old archived file -->
            <totalSizeCap>5GB</totalSizeCap>
            <!-- 60 days to keep -->
            <maxHistory>60</maxHistory>
        </rollingPolicy>
    </appender>

    <appender name="FILE-DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS_PATH}/debug-logback.log</file>
        <encoder>
            <pattern>[${HOSTNAME}|%d{yyyy-MM-dd HH:mm:ss}|%level] %logger{8} %msg\n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOGS_PATH}/debug-logback.%d{yyyy-MM-dd}_${HOSTNAME}.%i.log</fileNamePattern>
            <!-- each archived file, size max 10MB -->
            <maxFileSize>100MB</maxFileSize>
            <!-- total size of all archives files, if total size > 20GB, it will delete old archived file -->
            <totalSizeCap>1GB</totalSizeCap>
            <!-- 7 days to keep -->
            <maxHistory>7</maxHistory>
        </rollingPolicy>
    </appender>

    <appender name="FILE-ERR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <prudent>true</prudent>
        <file>${LOGS_PATH}/err-logback.log</file>
        <encoder>
            <pattern>[${HOSTNAME}|%d{yyyy-MM-dd HH:mm:ss}|%level] %logger{8} %msg\n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOGS_PATH}/err-logback.%d{yyyy-MM-dd}_${HOSTNAME}.%i.log</fileNamePattern>
            <!-- each archived file, size max 10MB -->
            <maxFileSize>10MB</maxFileSize>
            <!-- total size of all archives files, if total size > 20GB, it will delete old archived file -->
            <totalSizeCap>10GB</totalSizeCap>
            <!-- 60 days to keep -->
            <maxHistory>120</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- log4jdbc 옵션 설정 -->
    <logger name="jdbc" level="OFF"/>
    <!-- 커넥션 open close 이벤트를 로그로 남긴다. -->
    <logger name="jdbc.connection" level="OFF"/>
    <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
    <logger name="jdbc.sqlonly" level="OFF"/>
    <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
    <logger name="jdbc.sqltiming" level="OFF"/>
    <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
    <logger name="jdbc.audit" level="OFF"/>
    <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
    <logger name="jdbc.resultset" level="OFF"/>
    <!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
    <logger name="jdbc.resultsettable" level="OFF"/>
    <logger name="org.hibernate" level="INFO"/>
    <logger name="org.hibernate.SQL" level="INFO"/>
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="DEBUG"/>
    <logger name="org.springframework" level="DEBUG"/>
    <logger name="com.zaxxer.hikari" level="DEBUG"/>


    <logger name="xyz.needpainkiller" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
<!--        <appender-ref ref="FILE-INFO-PRUDENT"/>-->
        <appender-ref ref="FILE-INFO"/>
        <appender-ref ref="FILE-ERR"/>
    </logger>

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
<!--        <appender-ref ref="FILE-INFO-PRUDENT"/>-->
        <appender-ref ref="FILE-INFO"/>
        <appender-ref ref="FILE-ERR"/>
    </root>

    <root level="DEBUG">
        <appender-ref ref="FILE-INFO"/>
<!--        <appender-ref ref="FILE-INFO-PRUDENT"/>-->
        <appender-ref ref="FILE-DEBUG"/>
        <appender-ref ref="FILE-ERR"/>
    </root>

</configuration>
